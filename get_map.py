import os
import xml.etree.ElementTree as ET

from PIL import Image
from tqdm import tqdm

from frcnn import FRCNN
from utils.utils import get_classes
from utils.utils_map import get_coco_map, get_map

if __name__ == "__main__":
    '''
    Recall和Precision不像AP是一个面积的概念，因此在门限值（Confidence）不同时，网络的Recall和Precision值是不同的。
    默认情况下，本代码计算的Recall和Precision代表的是当门限值（Confidence）为0.5时，所对应的Recall和Precision值。

    受到mAP计算原理的限制，网络在计算mAP时需要获得近乎所有的预测框，这样才可以计算不同门限条件下的Recall和Precision值
    因此，本代码获得的map_out/detection-results/里面的txt的框的数量一般会比直接predict多一些，目的是列出所有可能的预测框，
    '''
    # ------------------------------------------------------------------------------------------------------------------#
    #   map_mode用于指定该文件运行时计算的内容
    #   map_mode为0代表整个map计算流程，包括获得预测结果、获得真实框、计算VOC_map。
    #   map_mode为1代表仅仅获得预测结果。
    #   map_mode为2代表仅仅获得真实框。
    #   map_mode为3代表仅仅计算VOC_map。
    #   map_mode为4代表利用COCO工具箱计算当前数据集的0.50:0.95map。需要获得预测结果、获得真实框后并安装pycocotools才行
    # -------------------------------------------------------------------------------------------------------------------#
    map_mode = 0
    # --------------------------------------------------------------------------------------#
    #   此处的classes_path用于指定需要测量VOC_map的类别
    #   一般情况下与训练和预测所用的classes_path一致即可
    # --------------------------------------------------------------------------------------#
    # TODO
    classes_path = 'model_data/voc_base_classes_19.txt'
    # classes_path = 'model_data/voc_incre_classes_1.txt'
    # classes_path = 'model_data/voc_base_classes_15.txt'
    # classes_path = 'model_data/voc_base_classes_10.txt'
    # classes_path = 'model_data/voc_classes.txt'
    # --------------------------------------------------------------------------------------#
    #   MINOVERLAP用于指定想要获得的mAP0.x，mAP0.x的意义是什么请同学们百度一下。
    #   比如计算mAP0.75，可以设定MINOVERLAP = 0.75。
    #
    #   当某一预测框与真实框重合度大于MINOVERLAP时，该预测框被认为是正样本，否则为负样本。
    #   因此MINOVERLAP的值越大，预测框要预测的越准确才能被认为是正样本，此时算出来的mAP值越低，
    # --------------------------------------------------------------------------------------#
    MINOVERLAP = 0.5
    # --------------------------------------------------------------------------------------#
    #   受到mAP计算原理的限制，网络在计算mAP时需要获得近乎所有的预测框，这样才可以计算mAP
    #   因此，confidence的值应当设置的尽量小进而获得全部可能的预测框。
    #   
    #   该值一般不调整。因为计算mAP需要获得近乎所有的预测框，此处的confidence不能随便更改。
    #   想要获得不同门限值下的Recall和Precision值，请修改下方的score_threhold。
    # --------------------------------------------------------------------------------------#
    confidence = 0.02
    # --------------------------------------------------------------------------------------#
    #   预测时使用到的非极大抑制值的大小，越大表示非极大抑制越不严格。
    #   
    #   该值一般不调整。
    # --------------------------------------------------------------------------------------#
    nms_iou = 0.5
    # ---------------------------------------------------------------------------------------------------------------#
    #   Recall和Precision不像AP是一个面积的概念，因此在门限值不同时，网络的Recall和Precision值是不同的。
    #   
    #   默认情况下，本代码计算的Recall和Precision代表的是当门限值为0.5（此处定义为score_threhold）时所对应的Recall和Precision值。
    #   因为计算mAP需要获得近乎所有的预测框，上面定义的confidence不能随便更改。
    #   这里专门定义一个score_threhold用于代表门限值，进而在计算mAP时找到门限值对应的Recall和Precision值。
    # ---------------------------------------------------------------------------------------------------------------#
    score_threhold = 0.5
    # -------------------------------------------------------#
    #   map_vis用于指定是否开启VOC_map计算的可视化
    # -------------------------------------------------------#
    map_vis = False
    # -------------------------------------------------------#
    #   指向VOC数据集所在的文件夹
    #   默认指向根目录下的VOC数据集
    # -------------------------------------------------------#
    VOCdevkit_path = '/home/ubuntu/hdd2/zhq'
    # VOCdevkit_path = '/home/data/zhq'
    # -------------------------------------------------------#
    #   结果输出的文件夹，默认为map_out
    # -------------------------------------------------------#
    # TODO
    # map_out_path = 'map_out/b19_n1/test_incre'
    # map_out_path = 'map_out/b19_n1/test_ewc_1'
    # map_out_path = 'map_out/b19_n1/directy_test_n1'
    map_out_path = 'map_out/b19_n1/base_2080ti'
    # map_out_path = 'map_out/upper'
    # map_out_path = 'map_out/b15_n5/base'
    # map_out_path = 'map_out/b10_n10/base'

    image_ids = open(os.path.join(VOCdevkit_path, "VOC2007/ImageSets/Main/test.txt")).read().strip().split()
    # image_ids_1 = open(os.path.join(VOCdevkit_path, "VOC2007/ImageSets/Main/test.txt")).read().strip().split()
    # tv_ids = ['2009_001809', '003451', '2008_006062', '2009_000939', '2008_003348', '009155', '2008_006373', '2008_006373', '2009_000014', '2011_000077', '2009_002872', '2008_007527', '2011_002268', '2009_002820', '005563', '008563', '2011_001573', '2011_001573', '2008_006366', '005923', '006389', '2011_002158', '005235', '001166', '000994', '2008_002826', '2010_001363', '2010_001363', '002430', '2009_002849', '003776', '2008_004908', '2008_004908', '2008_004908', '005796', '2008_000093', '2008_004754', '2011_000288', '002004', '002004', '002004', '009373', '009373', '2008_004259', '2010_005133', '2008_006409', '007583', '2008_001888', '2008_001888', '007219', '2008_001920', '2008_001920', '008405', '008405', '008405', '2011_002656', '2008_003948', '2008_003948', '001149', '2010_004358', '2009_000552', '2008_003202', '000707', '000707', '004916', '2011_002511', '004308', '004308', '2008_005064', '2010_004137', '009173', '006000', '003356', '009906', '009906', '009906', '009906', '2008_004297', '000659', '2009_004965', '006472', '2008_008649', '007130', '007130', '2011_002942', '2009_001069', '2011_001977', '009010', '000045', '2010_005243', '007359', '2008_001401', '2010_003241', '007762', '2009_002652', '2010_005410', '004231', '004231', '004231', '2011_001689', '003157', '005411', '001011', '003590', '007178', '2008_003753', '001717', '2010_004429', '2008_007196', '2008_007196', '2008_007196', '2010_001367', '2008_007990', '000041', '2008_006288', '2010_001533', '2010_001533', '2010_005158', '002394', '2010_003436', '2011_002154', '2011_001678', '2009_004301', '2009_003387', '2009_003387', '006144', '008997', '2009_000216', '006339', '003322', '004956', '006411', '2009_005070', '2011_001357', '002902', '009279', '009279', '001826', '008277', '008277', '2010_002002', '005210', '006452', '2009_004503', '2009_004503', '2009_004503', '002850', '002850', '2009_003204', '008404', '2009_000895', '2009_000895', '2009_003373', '003398', '2010_001690', '2011_000290', '2008_005094', '008659', '007747', '000598', '000598', '2009_003214', '2009_003214', '2009_002758', '009649', '2010_005305', '2010_004857', '2010_004857', '007996', '008888', '2009_001363', '2009_001644', '2010_001862', '007321', '2010_003461', '2008_002231', '2010_001918', '003751', '2009_002331', '2009_002331', '2009_002331', '2009_002331', '2009_002331', '2008_004661', '2011_001404', '2011_001404', '009446', '006684', '006684', '001905', '2010_002097', '2010_002097', '2010_003874', '2008_004807', '2009_004993', '2008_003213', '2011_000400', '2008_000002', '2009_003140', '009576', '004166', '004274', '2009_000629', '2009_000629', '2009_000629', '2009_000629', '2009_000629', '2009_002366', '006633', '006633', '006158', '2008_005191', '007196', '007196', '007196', '2011_002620', '004252', '003934', '2008_000070', '005250', '2011_001910', '2008_001880', '2010_004944', '2008_000202', '002124', '2011_002756', '2009_000981', '2011_003194', '2011_003194', '006293', '008611', '2009_001553', '007189', '009151', '009151', '001024', '006116', '009217', '2008_004541', '008707', '008707', '008707', '006755', '006755', '006755', '004955', '2009_001526', '007263', '2008_006710', '2008_006710', '2008_006710', '006323', '006323', '006066', '2011_001726', '002601', '003258', '002638', '002638', '002638', '2009_004341', '005902', '005902', '005902', '001742', '2008_004881', '2010_002686', '2009_002537', '001811', '2010_003719', '2010_003719', '2010_005930', '005160', '009295', '2008_003264', '001500', '001039', '001039', '001039', '001039', '001039', '001039', '001039', '001039', '006947', '007732', '008274', '2011_001304', '006743', '007110', '2010_002652', '2009_005030', '001961', '2009_004763', '2010_004109', '2008_005929', '2008_008429', '2011_001058', '2011_001058', '2011_001058', '002086', '002086', '004222', '008982', '009888', '2008_001641', '005856', '2009_003695', '2010_000944', '2008_005817', '2008_005817', '009882', '009882', '008970', '005823', '2008_002082', '000257', '008946', '2008_007281', '003686', '002328', '008709', '004410', '2010_002586', '2008_002817', '2011_001856', '2010_002561', '001214', '001214', '2009_001103', '2011_000253', '2011_000253', '005799', '2008_007217', '007039', '2008_005231', '2011_001833', '009097', '003120', '2008_001772', '2008_006719', '002617', '2010_000931', '2010_000931', '2010_000379', '2010_004368', '008751', '2008_006052', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '2008_002680', '2010_005054', '009554', '001363', '001363', '2008_007696', '2009_001608', '2008_001073', '004331', '2008_006159', '2010_003864', '006345', '2008_005877', '006010', '2008_004093', '2008_003466', '004163', '2009_005062', '2011_001466', '2011_002802', '2009_002094', '2009_002094', '008067', '008561', '008561', '007530', '2010_003236', '009216', '2008_007332', '001763', '008949', '2011_001223', '2011_001223', '004064', '2008_003995', '2010_000674', '2010_000318', '2010_000318', '006308', '007023', '2011_003047', '002901', '002901', '009165', '009165', '009165', '009165', '009165', '009165', '2011_002418', '2008_006948', '2009_003367', '2009_003367', '2009_002562', '2008_006662', '2008_006662', '2008_002676', '2008_007010', '003314', '003314', '2010_004479', '002081', '2008_004619', '2009_003191', '2009_000214', '2011_001730', '006209', '2009_003078', '000626', '000626', '000626', '2009_004905', '2010_005841', '2010_005841', '2010_005841', '008365', '2009_003753', '2009_000136', '001704', '003005', '008302', '002905', '007849', '007849', '007849', '007849', '009032', '009032', '2008_005066', '004549', '007816', '007816', '2010_004523', '002931', '2010_005450', '007506', '2010_000705', '001572', '009837', '007999', '2011_000685', '2008_002638', '000059', '000059', '2008_003037', '2011_002610', '003136', '2008_004321', '2008_007864', '2008_007933', '2008_007933', '2008_007933', '2008_007933', '2010_002526', '2010_002526', '2008_000023', '2009_004165', '003463', '2009_003646', '2009_003646', '2008_002218', '2010_005180', '2009_005256', '2011_000567', '006814', '2011_001928', '008428', '004164', '008121', '000304', '003808', '009404', '009404', '005605', '005605', '007458', '009840', '2008_005329', '2008_008439', '2009_000488', '2008_006668', '005827', '001444', '001444', '2010_002843', '009594', '2009_002733', '2009_002733', '006987', '2011_001946', '001695', '008204', '007354', '003694', '001678', '001678', '001678', '2010_003770', '2010_003857', '2010_000449', '006745', '000204', '2008_008276', '002119', '2009_001779', '2009_001779', '003113', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '2008_007246', '005565', '007559', '001543', '001536', '2010_000442', '005059', '2010_002791', '2009_001964', '007915', '007915', '007915', '007915', '007915', '007915', '2008_007536', '2008_007536', '2008_007536', '006384', '009521', '2010_005827', '003204', '2008_007097', '2009_002932', '2008_003585', '000104', '000592', '2010_004102', '2010_004102', '2010_004102', '2010_004102', '009746', '009746', '2010_000178', '009689', '2008_005732', '2008_005732', '001470', '2008_004279', '2008_005257', '009611', '006395', '2010_003728', '008837', '008837', '2009_002755', '000948', '005834', '000571', '000571', '000571', '000571', '000571', '000571', '000571', '000571', '000571', '002627', '004150', '009196', '003401', '2010_004249', '004020', '008179', '2009_001682', '005946', '2008_004910', '004418', '003660', '005997', '008050', '008050', '2008_004961', '003011', '003011', '000997', '000974', '2009_000848', '2009_000848', '001430', '2011_001507', '2011_001507', '002561', '003678', '2010_005884', '003532', '005754', '2008_002776', '2008_005090', '2009_001839', '2009_001839', '2009_001839', '2008_003432', '2008_003432', '2008_003432', '2008_003432', '2008_003432', '006628', '009795', '2008_007561', '2010_001277', '2008_000383', '2010_003688', '004111', '2010_003674', '002997', '009319', '009319', '005807', '2010_005372', '2010_005371', '004342', '004342', '004342', '2009_003554', '008991', '2009_005240', '2008_003814', '001551', '2010_003035', '2010_003035', '2009_003523', '2009_001875', '2010_000800', '009478', '2011_001387', '009474', '000121', '000121', '2010_000807', '2009_001133', '2008_001130', '2008_004526', '2010_004125', '2008_004506', '2008_004506', '2008_004506', '2008_004506', '2008_004506', '002752', '002093', '2011_000399', '002469', '006742', '2008_005569', '008557', '2010_000773', '005641', '2008_006273', '2008_007962', '2011_002810', '2008_002140', '2011_001705', '2009_000041', '2009_000041', '008049', '2010_004095', '2010_005764', '2010_002015', '003909', '003909', '003909', '2008_005255', '004781', '004781', '004781', '004781', '004781', '002514', '2011_000499', '002952', '2010_004982', '2010_001562', '2009_000791', '2010_005049', '2009_001111', '2009_001111', '2009_001111', '001809', '007432', '2010_002167', '001027', '2008_004720', '2008_004720', '001077', '2008_005967', '006313', '004053', '004510', '2008_002069', '2008_003003', '2009_003157', '2008_001428', '009481', '004100', '2010_004295', '2008_000309', '2008_000309', '004514', '002951', '002951', '2009_003265', '005587', '2010_003405', '003449', '003449', '2010_004503', '003158', '2011_002775', '2010_000658', '004717', '000291', '000291', '2008_007361', '2008_005342', '002549', '2011_002560', '001827', '005517', '005517', '005517', '2010_005239', '2010_005239', '2010_001939', '2009_001155', '2009_004176', '2009_000585', '002656', '003260', '2009_000010', '2009_000391', '008686', '2010_000291', '2010_000291', '006704', '009094', '2008_001461', '002441', '000597', '000597', '008407', '008407', '008407', '005396', '2008_005609', '2010_001127', '2010_000787', '2010_000787', '000956', '2008_005183', '2011_002156', '004040', '2009_001864', '2011_000038', '2009_001961', '006450', '2011_001456', '009656', '2008_002066', '2009_000444', '2009_000444', '004652', '2010_002402', '009445', '2009_004138', '007835', '2008_006605', '2008_006605', '2008_006295', '006068', '002356', '2009_001852', '000414', '2008_003026', '2009_001343', '000185', '2008_008524', '2011_001621', '2008_006624', '2009_004359', '2008_005660', '2008_005660', '006131', '006131', '006131', '2008_001896', '2008_004006', '002132', '001875', '2011_002218', '2009_000439', '003374', '005349', '005349', '003507', '003507', '2010_004254', '002074', '002334', '002334', '002334', '2011_000607', '2011_002842', '009333', '2009_004902', '006583', '006583', '009486', '2009_005310', '2009_000336', '2010_002327', '2010_002327', '002989', '003487', '2008_005008', '2008_005008', '000349', '2008_004501', '2009_002827', '000758', '2010_005805', '001725', '001725', '001725', '006473', '001138', '001138', '001138', '2010_000738', '2010_000738', '2009_001188', '2010_002567', '2010_002567', '2008_007446', '2008_007446', '2009_004128', '006041', '2010_001860', '2008_007114', '2008_007114', '000421', '2011_002879', '2009_002970', '2009_002970', '2009_002970', '2009_002970', '2009_002970', '2009_002970', '2009_002970', '2009_002970', '2009_002970', '2009_002970', '003604', '2010_002094', '001824', '2010_000669', '2010_000591', '008288', '007842', '2010_002921', '2010_002921', '2010_002921', '008887', '008887', '007250', '001546', '2011_001837', '009388', '009388', '009388', '2009_002232', '2008_005976', '2008_005037', '2008_001815', '2008_001815', '2010_001270', '2009_003852', '2011_002005', '009454', '2008_006047', '003947', '007754', '007754', '007754', '004193', '2008_005625', '000632', '003369', '003911', '2009_004760', '2009_004760', '2010_005744', '2009_004631', '2008_006887', '2008_006887', '000813', '005104', '007564', '2008_007567', '005027', '001175', '005723', '009192', '2008_004719', '2008_004719', '002767', '002767', '002767', '2008_001781', '006446', '004868', '006040', '2008_005393', '005589', '2010_003137', '009511', '006074', '006074', '2008_001688', '2008_004665', '2008_002831', '2011_001302', '2011_001302', '2011_001302', '2008_003825', '2010_000053', '008525', '2010_001780', '2008_006147', '2008_006147', '2008_004492', '008422', '008422', '008422', '004260', '003300', '006574', '006574', '006574', '006574', '005898', '2008_005918', '2011_001938', '004192', '002073', '2010_006050', '2010_006050', '2010_006050', '2010_006050', '2010_006050', '2010_006050', '2009_000722', '2010_002245', '2011_003079', '007113', '2011_000036', '001459', '000644', '006307', '006307', '2010_001099', '2008_007476', '2008_003280', '2008_003280', '2008_003280', '006798', '2010_003892', '2010_003892', '2011_002970', '000397', '009397', '002792', '2008_007282', '2009_000544', '002280', '2010_002427', '2008_004606', '2009_001000', '007166', '2010_003437', '005313', '2008_003435', '001081', '2011_001926', '2010_003844', '2011_000557', '2009_002967', '001590', '003716', '2008_000566', '2008_000566', '2008_000566', '2008_000566', '2010_002742', '2008_001704', '2010_000435', '2009_003857', '2011_001370', '2011_000364', '004179', '000342', '2008_006617', '001343', '001343', '001810', '002282', '2008_004301', '2008_002464', '2010_005071', '009484', '2011_002554', '2011_002554', '2011_002554', '000790', '003963', '001029', '2010_004805', '006078', '002953', '002953', '006624', '2011_002514', '2009_000704', '2009_000704', '2010_002513', '007544', '005753', '005753', '005753', '005753', '008947', '2009_002705', '2008_006433', '009200', '009200', '007348', '008948', '006688', '006771', '2008_005962', '001367', '001367', '006630', '2009_001555', '000633', '2008_008608', '2010_004816', '007203', '007203', '008076', '001650', '005618', '2008_000578', '007210', '2008_002481', '2008_007916', '008660', '2008_003883', '005007', '007982', '007982', '007982', '007982', '001549', '008874', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2009_004062', '2008_007038', '2009_002409', '2008_001997', '2008_001997', '2008_007828', '2008_007828', '2009_000398', '2009_000398', '2009_000398', '2010_004545', '2011_002966', '2011_000061', '2011_000061', '2011_000061', '005178', '2008_005445', '2009_004478', '2009_000679', '2009_000679', '002174', '000265', '000961', '000961', '2008_000244', '2008_006773', '003662', '2011_000072', '008913', '008913', '2011_000434', '2010_004009', '2010_004009', '2010_000974', '2008_003885', '003291', '2010_000375', '2009_001615', '001752', '2008_004097', '006817', '006817', '006817', '006817', '2011_000755', '006622', '005526', '001898', '2011_003246', '2008_006606', '2008_006606', '2008_006606', '2008_000145', '2008_006136', '2008_006136', '2011_000071', '2009_001812', '2009_005042', '2009_005042', '2009_005042', '2009_005042', '2008_004008', '2010_004591', '000989', '000224', '2008_003667', '007702', '003389', '2008_006591', '2008_006591', '006179', '2009_002573', '003024', '003024', '2008_005254', '2010_002770', '2009_002110', '2009_002110', '2009_002110', '2009_004519', '009249', '001007', '2011_000037', '2011_000037', '2009_000549', '008177', '008291', '2010_001113', '007100', '007100', '001920', '001920', '009914', '009914', '005153', '005153', '005153', '005153', '2009_004719', '2011_002750', '2011_000608', '002608', '2009_003093', '2010_005676', '004754', '2008_000016', '2011_000009', '001871', '001513', '004148', '2008_006946', '2008_006946', '005808', '2010_000386', '004438', '2009_005221', '2011_002509', '2010_004836', '2010_005678', '2008_004898', '2008_006031', '002985', '2010_001752', '2008_000348', '2008_000348', '004716', '007729', '2008_000904', '003759', '2008_002547', '2009_003920', '2010_004306', '005255', '2011_000317', '009143', '2008_005089', '006435', '005545', '005935', '001010', '2008_000495', '000761', '006646', '2008_007987', '2008_003609', '009310', '2008_002119', '009051', '2009_004922', '2009_001452', '2008_004330', '008955', '2011_001149', '2008_007324', '009881', '2009_003720', '008282', '002645', '2008_003589', '2008_008206', '2008_005006', '003757', '008897', '001813', '008213', '008213', '2008_005678', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '2009_004357', '001588', '2011_002507', '005454', '2009_003316', '001234', '2009_001874', '2008_000305', '2009_000157', '2009_000157', '001062', '003983', '2010_002193', '001204', '2008_002328', '2008_005954', '000923', '000923', '2008_001021', '008451', '009631', '008347', '004190', '006760', '006760', '2008_001576', '006774', '007808', '007333', '2010_003287', '2008_003200', '2011_002532', '2011_002532', '008374', '008374', '007332', '009935', '009935', '009935', '009935', '004106', '2011_000965', '2008_006733', '2008_006733', '2008_006733', '2009_003895', '2009_003895', '2009_003895', '002252', '002258', '005375', '003558', '002503', '005867', '2010_003103', '008851', '001338', '005187', '004341', '2008_007242', '002062', '2008_001481', '2008_001481', '002227', '000559', '2011_002814', '009274', '004237', '004237', '2010_005345', '009325', '2009_002663', '009357', '009357', '006238', '2008_004004', '2011_000382', '2011_000382', '2008_002650', '007394', '2010_001580', '008409', '2011_002462', '2010_002152', '2009_005288', '2009_001357', '2008_001143', '2008_001143', '000227', '004024', '004024', '004024', '004024', '006314', '009379', '009379', '009379', '2009_004243', '2009_004243', '2010_000578', '2010_000578', '008954', '008954', '008954', '008954', '008954', '008462', '008462', '008462', '008462', '008462', '008462', '008462', '008462', '008462', '008462', '2008_006135', '001392', '2008_003434', '2009_003551', '2009_003551', '2010_003942', '2010_003942', '008655', '2008_007798', '2008_005639', '2008_006267', '2008_006267', '2008_006267', '000843', '2010_004050', '009867', '009867', '2011_001394', '2011_001394', '2010_005190', '006029', '2008_002954', '009788', '003981', '2009_002984', '2009_002984', '2009_002984', '2011_001093', '2008_004930', '007465', '2011_003254', '2009_002139', '2009_001106', '2009_001106', '009226', '002117', '007390', '008386', '008386', '2008_004217', '2009_001605', '2008_007685', '2008_007685', '2008_006233', '007401', '2010_000141', '009561', '009561', '2008_003500', '003248', '000039', '2010_000893', '006348', '008285', '008471', '006061', '2011_002726', '002778', '000162', '000187', '2009_001393', '2008_006271', '2008_006271', '2008_006271', '004773', '002939', '009697', '2008_005957', '003801', '2008_004333', '2009_000987', '006842', '006842', '2011_002644', '2010_002247', '2010_002247', '2008_005439', '2009_003537', '2009_002995', '2011_000444', '2008_003712', '2008_003712', '2010_004460', '2008_008269', '2010_004586', '2010_002982', '2011_002292', '2008_003248', '2008_003248', '004289', '008047', '004664', '008486', '008486', '001529', '2008_004550', '008675', '002962', '003780', '003780', '003780', '006075', '005852', '005852', '2008_004781', '2011_000192', '005814', '2008_008590', '002809']
    #
    # image_ids = []
    # for i in tv_ids:
    #     if i in image_ids_1:
    #         image_ids.append(i)
    # image_ids = ['000045', '000059', '000059', '000185', '000204', '000227', '000265', '000291', '000291', '000342', '000397', '000414', '000421', '000571', '000571', '000571', '000571', '000571', '000571', '000571', '000571', '000571', '000644', '000659', '000758', '000790', '000813', '000956', '000961', '000961', '000974', '000994', '001007', '001029', '001039', '001039', '001039', '001039', '001039', '001039', '001039', '001039', '001081', '001138', '001138', '001138', '001338', '001363', '001363', '001367', '001367', '001392', '001459', '001500', '001513', '001546', '001549', '001551', '001572', '001695', '001704', '001742', '001763', '001811', '001813', '001824', '001826', '001871', '001905', '001961', '002062', '002073', '002074', '002081', '002093', '002119', '002227', '002252', '002258', '002282', '002356', '002394', '002430', '002469', '002503', '002601', '002608', '002617', '002638', '002638', '002638', '002656', '002752', '002792', '002809', '002850', '002850', '002902', '002905', '002951', '002951', '002985', '002997', '003113', '003136', '003158', '003248', '003291', '003314', '003314', '003322', '003389', '003463', '003507', '003507', '003532', '003558', '003590', '003686', '003716', '003757', '003776', '003801', '003909', '003909', '003909', '003934', '003981', '004024', '004024', '004024', '004024', '004040', '004053', '004064', '004166', '004179', '004222', '004252', '004260', '004289', '004308', '004308', '004342', '004342', '004342', '004410', '004418', '004664', '004716', '004717', '004781', '004781', '004781', '004781', '004781', '005059', '005178', '005187', '005235', '005250', '005255', '005313', '005375', '005411', '005545', '005565', '005587', '005589', '005753', '005753', '005753', '005753', '005754', '005807', '005808', '005823', '005827', '005834', '005898', '005902', '005902', '005902', '005935', '005946', '005997', '006010', '006040', '006068', '006075', '006116', '006144', '006293', '006307', '006307', '006308', '006313', '006345', '006384', '006389', '006435', '006446', '006452', '006574', '006574', '006574', '006574', '006624', '006630', '006633', '006633', '006646', '006688', '006742', '006743', '006745', '006771', '006774', '006798', '006817', '006817', '006817', '006817', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '006984', '007110', '007178', '007196', '007196', '007196', '007203', '007203', '007321', '007332', '007333', '007348', '007354', '007401', '007564', '007583', '007747', '007808', '007816', '007816', '007835', '007842', '007849', '007849', '007849', '007849', '007982', '007982', '007982', '007982', '008047', '008050', '008050', '008179', '008274', '008277', '008277', '008288', '008291', '008347', '008404', '008405', '008405', '008405', '008407', '008407', '008407', '008428', '008451', '008471', '008486', '008486', '008525', '008561', '008561', '008563', '008611', '008659', '008660', '008675', '008686', '008707', '008707', '008707', '008751', '008851', '008887', '008887', '008897', '008946', '008947', '008949', '008954', '008954', '008954', '008954', '008954', '008991', '009010', '009097', '009143', '009165', '009165', '009165', '009165', '009165', '009165', '009216', '009217', '009226', '009274', '009310', '009319', '009319', '009357', '009357', '009379', '009379', '009379', '009397', '009404', '009404', '009474', '009478', '009486', '009511', '009521', '009554', '009561', '009561', '009594', '009631', '009689', '009697', '009788', '009795', '009837', '009840', '009888', '009906', '009906', '009906', '009906', '009914', '009914']

    if not os.path.exists(map_out_path):
        os.makedirs(map_out_path)
    if not os.path.exists(os.path.join(map_out_path, 'ground-truth')):
        os.makedirs(os.path.join(map_out_path, 'ground-truth'))
    if not os.path.exists(os.path.join(map_out_path, 'detection-results')):
        os.makedirs(os.path.join(map_out_path, 'detection-results'))
    if not os.path.exists(os.path.join(map_out_path, 'images-optional')):
        os.makedirs(os.path.join(map_out_path, 'images-optional'))

    class_names, _ = get_classes(classes_path)

    if map_mode == 0 or map_mode == 1:
        print("Load model.")
        frcnn = FRCNN(confidence=confidence, nms_iou=nms_iou)
        print("Load model done.")

        print("Get predict result.")
        for image_id in tqdm(image_ids):
            image_path = os.path.join(VOCdevkit_path, "VOC2007/JPEGImages/" + image_id + ".jpg")
            image = Image.open(image_path)
            if map_vis:
                image.save(os.path.join(map_out_path, "images-optional/" + image_id + ".jpg"))
            frcnn.get_map_txt(image_id, image, class_names, map_out_path)
        print("Get predict result done.")

    if map_mode == 0 or map_mode == 2:
        print("Get ground truth result.")
        for image_id in tqdm(image_ids):
            with open(os.path.join(map_out_path, "ground-truth/" + image_id + ".txt"), "w") as new_f:
                root = ET.parse(os.path.join(VOCdevkit_path, "VOC2007/Annotations/" + image_id + ".xml")).getroot()
                for obj in root.findall('object'):
                    difficult_flag = False
                    if obj.find('difficult') != None:
                        difficult = obj.find('difficult').text
                        if int(difficult) == 1:
                            difficult_flag = True
                    obj_name = obj.find('name').text
                    if obj_name not in class_names:
                        continue
                    bndbox = obj.find('bndbox')
                    left = bndbox.find('xmin').text
                    top = bndbox.find('ymin').text
                    right = bndbox.find('xmax').text
                    bottom = bndbox.find('ymax').text

                    if difficult_flag:
                        new_f.write("%s %s %s %s %s difficult\n" % (obj_name, left, top, right, bottom))
                    else:
                        new_f.write("%s %s %s %s %s\n" % (obj_name, left, top, right, bottom))
        print("Get ground truth result done.")

    if map_mode == 0 or map_mode == 3:
        print("Get map.")
        get_map(MINOVERLAP, True, score_threhold=score_threhold, path=map_out_path)
        print("Get map done.")

    if map_mode == 4:
        print("Get map.")
        get_coco_map(class_names=class_names, path=map_out_path)
        print("Get map done.")
